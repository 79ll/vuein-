{"remainingRequest":"C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\src\\components\\thetext.vue?vue&type=template&id=2b18303e&","dependencies":[{"path":"C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\src\\components\\thetext.vue","mtime":1582954023258},{"path":"C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\王华晖\\Documents\\HBuilderProjects\\myvue\\myvue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}